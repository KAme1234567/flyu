import 'package:flutter/material.dart';

class CommunityPage extends StatelessWidget {
  const CommunityPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFFF0F9F0),
      appBar: AppBar(
        title: const Text('Á¢≥ÊéíÁ§æÁæ§ÂäüËÉΩ'),
        backgroundColor: Colors.green[400],
        foregroundColor: Colors.white,
        elevation: 0,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const _CarbonSummaryCard(),
            const SizedBox(height: 24),
            const Text(
              'ÂäüËÉΩÈÅ∏ÂñÆ',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 12),
            _FunctionButtonGrid(),
          ],
        ),
      ),
    );
  }
}

class _CarbonSummaryCard extends StatelessWidget {
  const _CarbonSummaryCard();

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: BoxDecoration(
        gradient: LinearGradient(
          colors: [Colors.green.shade200, Colors.green.shade500],
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
        ),
        borderRadius: BorderRadius.circular(16),
        boxShadow: const [
          BoxShadow(color: Colors.black26, blurRadius: 8, offset: Offset(0, 4)),
        ],
      ),
      padding: const EdgeInsets.all(20),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: const [
          Row(
            children: [
              Icon(Icons.bar_chart, color: Colors.white),
              SizedBox(width: 8),
              Text(
                "1ÊúàÁ¢≥ÊéíÁ∏ΩË¶Ω",
                style: TextStyle(
                  fontSize: 20,
                  fontWeight: FontWeight.bold,
                  color: Colors.white,
                ),
              ),
            ],
          ),
          SizedBox(height: 12),
          Text("üöÜ ÁÅ´ËªäÔºö12g", style: TextStyle(color: Colors.white)),
          Text("üöå ÂÖ¨ËªäÔºö48g", style: TextStyle(color: Colors.white)),
          Text("üöá Êç∑ÈÅãÔºö64g", style: TextStyle(color: Colors.white)),
          Divider(color: Colors.white70),
          Text(
            "üì¶ Á∏ΩÈáèÔºö124g",
            style: TextStyle(
              fontWeight: FontWeight.bold,
              fontSize: 16,
              color: Colors.white,
            ),
          ),
        ],
      ),
    );
  }
}

class _FunctionButtonGrid extends StatelessWidget {
  final List<_FeatureItem> features = const [
    _FeatureItem("Â•ΩÂèãÊéíË°å", Icons.people),
    _FeatureItem("Á∏ΩÊéíË°å", Icons.leaderboard),
    _FeatureItem("Ë∑ØÁ∑öË®òÈåÑ", Icons.map),
    _FeatureItem("ÊèõÂèñÈªûÊï∏", Icons.card_giftcard),
    _FeatureItem("Á§æÁæ§", Icons.group),
    _FeatureItem("Á¢≥ÊéíÊèêÈÜí", Icons.notifications_active),
  ];

  @override
  Widget build(BuildContext context) {
    return GridView.count(
      crossAxisCount: 3,
      shrinkWrap: true,
      physics: const NeverScrollableScrollPhysics(),
      crossAxisSpacing: 12,
      mainAxisSpacing: 12,
      children:
          features.map((feature) {
            return InkWell(
              onTap: () => _showFeatureModal(context, feature.title),
              borderRadius: BorderRadius.circular(16),
              child: Container(
                decoration: BoxDecoration(
                  color: Colors.green[300],
                  borderRadius: BorderRadius.circular(16),
                  boxShadow: const [
                    BoxShadow(
                      color: Colors.black26,
                      blurRadius: 6,
                      offset: Offset(0, 3),
                    ),
                  ],
                ),
                padding: const EdgeInsets.all(12),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Icon(feature.icon, color: Colors.white, size: 28),
                    const SizedBox(height: 8),
                    Text(
                      feature.title,
                      style: const TextStyle(
                        color: Colors.white,
                        fontWeight: FontWeight.w600,
                      ),
                      textAlign: TextAlign.center,
                    ),
                  ],
                ),
              ),
            );
          }).toList(),
    );
  }

  void _showFeatureModal(BuildContext context, String title) {
    final Map<String, String> content = {
      'Â•ΩÂèãÊéíË°å':
          'ü•á Â∞èÁ∂†Ëëâ 18.4kg\nü•à ecoÂ∞èÂ≠ê 16.2kg\nü•â ÂñÆËªäÂ•≥Á•û 15.7kg\nüèÖ Á∂†Ë°åËÄÖ 13.9kg\nüèÖ ‰ΩéÁ¢≥ÊóÖ‰∫∫ 12.4kg',
      'Á∏ΩÊéíË°å':
          'ü•á ZeroCarb 402.3kg\nü•à Á∂†ËÉΩÈòøÂ¨§ 386.1kg\nü•â ÁÑ°ËªäÊóè 370.5kg\nüèÖ Ê†°ÂúíÊ∏õÁ¢≥Á§æ 350.8kg\nüèÖ GoGreenÈöä 340.6kg',
      'Ë∑ØÁ∑öË®òÈåÑ':
          'üìç 5/21 ÊùøÊ©ã‚ÜíÂÖ¨È§®Ôºà42gÔºâ\nüìç 5/20 Âè∞‰∏≠‚ÜíÈ´òÈõÑÔºà105gÔºâ\nüìç 5/19 Ê∑°Ê∞¥‚ÜíÂè∞ÂåóÔºà23gÔºâ\nüìç 5/18 Âè∞Âåó‚ÜíÊñ∞Â∫óÔºà15gÔºâ',
      'ÊèõÂèñÈªûÊï∏':
          'üå± Ê§çÊ®πË™çË≠âÔºö200Èªû\nüé´ Êç∑ÈÅãËΩâ‰πòÂà∏Ôºö120Èªû\n‚òï ÂíñÂï°ÊäòÂÉπÂà∏Ôºö90Èªû\nüõç Áí∞‰øùË¢ãÔºö80Èªû\nüì¶ ESG Â†±ÂëäÂ∑•ÂÖ∑Ôºö50Èªû',
      'Á§æÁæ§': 'üí¨ „ÄåÊÄéÈ∫ºÊê≠ÈÖç‰ΩéÁ¢≥‰∫§ÈÄöÔºü„Äç\nüí¨ „ÄåÊàëÁî®Á∂†ÈªûÊèõÂà∏‰∫ÜÔºÅ„Äç\nüí¨ „ÄåÂ∏åÊúõÊñ∞Â¢ûÂè∞‰∏≠Ë∑ØÁ∑ö„Äç\nüí¨ „ÄåÂì™Â§©ÊúÉÊúâËá™Ë°åËªäÊó•Ôºü„Äç',
      'Á¢≥ÊéíÊèêÈÜí':
          'üö® ‰ªäÂ§©Ê±ΩËªäÂá∫Ë°åÔºö1.2kg\n‚úÖ Êò®Êó•Êç∑ÈÅãÔºö0.8kg\nüéØ Êú¨ÈÄ±Ê∏õÁ¢≥ÈÅîÊ®ôÁéáÔºö87%\nüìà Á¥ØÁ©çÊ∏õÁ¢≥ÈáèÔºö23.4kg\nüìÖ ÊúàÁõÆÊ®ôÔºö30kg',
    };

    showModalBottomSheet(
      context: context,
      shape: const RoundedRectangleBorder(
        borderRadius: BorderRadius.vertical(top: Radius.circular(20)),
      ),
      builder: (_) {
        return Padding(
          padding: const EdgeInsets.all(20),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              Text(
                title,
                style: const TextStyle(
                  fontSize: 20,
                  fontWeight: FontWeight.bold,
                ),
              ),
              const SizedBox(height: 12),
              Text(
                content[title] ?? 'ÂÖßÂÆπÊ∫ñÂÇô‰∏≠...',
                style: const TextStyle(fontSize: 16),
              ),
              const SizedBox(height: 20),
              ElevatedButton(
                onPressed: () => Navigator.pop(context),
                style: ElevatedButton.styleFrom(backgroundColor: Colors.green),
                child: const Text('ÈóúÈñâ'),
              ),
            ],
          ),
        );
      },
    );
  }
}

class _FeatureItem {
  final String title;
  final IconData icon;

  const _FeatureItem(this.title, this.icon);
}
